common --experimental_repo_remote_exec

build --define MEDIAPIPE_DISABLE_GPU=1

build --local_ram_resources=HOST_RAM*.5
build --local_cpu_resources=HOST_CPUS*.5
build --enable_platform_specific_config

build:macos --cxxopt=-std=c++17
build:macos --host_cxxopt=-std=c++17

build:linux --cxxopt=-std=c++17
build:linux --host_cxxopt=-std=c++17

# Setup compiler flags - required for Qt6 is at least C++17
# build:gcc9 --cxxopt=-std=c++2a
# build:gcc9 --cxxopt=-Wall
# build:gcc9 --cxxopt=-Werror

# GCC 11.2
# #build:gcc11 --cxxopt=-std=c++23 # blocked by emsdk
# build:gcc11 --cxxopt=-std=c++20
# build:gcc11 --cxxopt=-Wall
# #build:gcc11 --cxxopt=-Werror
# #build:gcc11 --cxxopt=-Wno-error=volatile # blocked by emsdk
# ##build:gcc11 --cxxopt=-Wextra

# Visual Studio 2019
# build:vs2019 --cxxopt=/std:c++20
# build:vs2019 --cxxopt=/Zc:__cplusplus # Untested
# build:vs2019 --enable_runfiles # https://github.com/bazelbuild/bazel/issues/8843
# build:vs2019 --define compiler=vs2019
# build:vs2019 --copt=-DWIN32_LEAN_AND_MEAN
# build:vs2019 --copt=-DNOGDI
# build:vs2019 --host_copt=-DWIN32_LEAN_AND_MEAN
# build:vs2019 --host_copt=-DNOGDI

# Visual Studio 2022
# build:vs2022 --cxxopt=/std:c++20
# build:vs2022 --cxxopt=/Zc:__cplusplus
# build:vs2022 --enable_runfiles # https://github.com/bazelbuild/bazel/issues/8843
# build:vs2022 --define compiler=vs2022
# build:vs2022 --copt=-DWIN32_LEAN_AND_MEAN
# build:vs2022 --copt=-DNOGDI
# build:vs2022 --host_copt=-DWIN32_LEAN_AND_MEAN
# build:vs2022 --host_copt=-DNOGDI

# macOS (e.g. Clang 12.0.0)
# build:macos --cxxopt=-std=c++2a
# build:macos --cxxopt=-Wall